{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItems.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","e","onClickCancel","NewExpense","newExpenseBoolean","setExpenseBoolean","expenseBooleanHandler","childExpenseData","id","Math","random","toString","onAddExpense","ExpenseFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItems","ExpenseList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","expenseMonth","getMonth","parseInt","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","InitialExpenses","App","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1fe49f1.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  \r\n  const cancelHandler = (e) => {\r\n    e.preventDefault();\r\n    props.onClickCancel()\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredAmount(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.1\"\r\n            step=\"0.1\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button className=\"alternative\" onClick={cancelHandler}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import {useState} from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n\r\n  const saveExpenseDataHandler = (childExpenseData) => {\r\n    const expenseData = {\r\n      ...childExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n// conditional rendering using props and state\r\n  const [newExpenseBoolean,setExpenseBoolean]=useState(true);\r\n  const expenseBooleanHandler = () =>{\r\n    setExpenseBoolean(!newExpenseBoolean);\r\n  }\r\n  if (newExpenseBoolean) {\r\n    return (\r\n      <div className=\"new-expense\">\r\n        <button onClick={expenseBooleanHandler}>Add New Expense</button>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onClickCancel={expenseBooleanHandler}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"./ExpenseFilter.css\";\r\n\r\nconst ExpenseFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter-control\">\r\n        <label>Filter by Year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseFilter;\r\n","import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","import ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItems.css\";\r\nconst ExpenseItems = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default ExpenseItems;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItems from \"./ExpenseItems\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback \">No Expense Found! </h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItems\r\n          key={expense.id}\r\n          title={expense.title}\r\n          date={expense.date}\r\n          amount={expense.amount}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value =parseInt(chartDataPoints[expenseMonth].value)+parseInt(expense.amount);\r\n  }\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpenseChart;\r\n","import { useState } from \"react\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\nimport \"./Expenses.css\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpenseChart expenses={filteredExpenses} />\r\n      <ExpenseList items={filteredExpenses} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport { useState } from \"react\";\nconst InitialExpenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(InitialExpenses);\n  const addNewExpenseHandler = (expense) => {\n    setExpenses((prevExpense) => {\n      return [expense, ...prevExpense];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addNewExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}